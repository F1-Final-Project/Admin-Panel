import React from 'react'import Button from '@material-ui/core/Button'import { TextValidator, ValidatorForm } from 'react-material-ui-form-validator'import {useStyles} from './style'import FormControlLabel from "@material-ui/core/FormControlLabel";import Select from '@material-ui/core/Select';import MenuItem from "@material-ui/core/MenuItem";export default props => {    const classes = useStyles();    const { onSubmit, handleInputChange, submitted, formData } = props;    return (        <>            <ValidatorForm className={classes.form} onSubmit={onSubmit}>                <TextValidator                    className={classes.input}                    label="Email"                    onChange={handleInputChange}                    name="email"                    type="text"                    value={formData.email}                    validators={['required', 'isEmail']}                    errorMessages={['this field is required', 'email is not valid']}                />                <br/>                <TextValidator                    className={classes.input}                    label="First name"                    onChange={handleInputChange}                    name="firstName"                    type="text"                    value={formData.firstName}                    validators={['required']}                    errorMessages={['this field is required']}                />                <br/>                <TextValidator                    className={classes.input}                    label="Last name"                    onChange={handleInputChange}                    name="lastName"                    type="text"                    value={formData.lastName}                    validators={['required']}                    errorMessages={['this field is required']}                />                <br/>                <TextValidator                    className={classes.input}                    label="Password"                    onChange={handleInputChange}                    name="password"                    type="password"                    value={formData.password}                    validators={['required']}                    errorMessages={['this field is required']}                />                <br/>                <TextValidator                    className={classes.input}                    label="Repeat password"                    onChange={handleInputChange}                    name="repeatPassword"                    type="password"                    value={formData.repeatPassword}                    validators={['isPasswordMatch', 'required']}                    errorMessages={['password mismatch', 'this field is required']}                />                <br/>                <FormControlLabel                    className={classes.label}                    label="Permission"                    labelPlacement="start"                    control={                        <Select                            name = "permission"                            value={formData.permission}                            onChange={handleInputChange}                            MenuProps={{PaperProps: {style: {backgroundColor: '#7a6c5b'}}}}                        >                            <MenuItem className={classes.select} value={'waiter'}>waiter</MenuItem>                            <MenuItem className={classes.select} value={'admin'}>admin</MenuItem>                            <MenuItem className={classes.select} value={'cook'}>cook</MenuItem>                        </Select>                    }                />                <br/>                <Button                    className={classes.growBtn}                    variant="outlined"                    type="submit"                    disabled={submitted}                >                    {(submitted && 'Loading...') || (!submitted && 'Create')}                </Button>            </ValidatorForm>        </>    )}